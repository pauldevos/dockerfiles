#
# example Dockerfile for https://docs.docker.com/engine/examples/postgresql_service/
#

FROM postgres:12.0-alpine 
# ubuntu:16.04

# Meta-Data
LABEL maintainer="Paul DeVos devosp@gmail.com"\
      description="Postgres Container for NBA Data"

# Set the working directory to /database
WORKDIR /database

# Copy the current local directory contents into the container at /database
COPY . /database

# Make Port 8888 available outside of this container (only does so if you do in command)
EXPOSE 8888

# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres

# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.
RUN    /etc/init.d/postgresql start &&\
    psql --command "CREATE USER postgres WITH SUPERUSER PASSWORD 'postgres';" &&\
    createdb -O basketball basketball

# Adjust PostgreSQL configuration so that remote connections to the
# database are possible.
RUN echo "host all  all    0.0.0.0/0  md5" >> /etc/postgresql/12.0/main/pg_hba.conf

# And add ``listen_addresses`` to ``/etc/postgresql/12.0/main/postgresql.conf``
RUN echo "listen_addresses='*'" >> /etc/postgresql/12.0/main/postgresql.conf

# Expose the PostgreSQL port
EXPOSE 5432

# Add VOLUMEs to allow backup of config, logs and databases
VOLUME  ["/etc/postgresql", "/var/log/postgresql", "/var/lib/postgresql"]

# Set the default command to run when starting the container
CMD ["/usr/lib/postgresql/12.0/bin/postgres", "-D", "/var/lib/postgresql/12.0/main", "-c", "config_file=/etc/postgresql/12.0/main/postgresql.conf"]